//
// Docta CSS - Variables
//

// Color system
// ---------------------------------------------------------------------------

// stylelint-disable value-keyword-case

$_base-colors: (
    "white": White,
    "gray": Gray,
    "black": Black,
    "red": Red,
    "pink": Pink,
    "purple": Purple,
    "indigo": Indigo,
    "blue": Blue,
    "cyan": Cyan,
    "teal": Teal,
    "green": Green,
    "yellow": Yellow,
    "orange": Orange,
);

$base-colors: () !default;
$base-colors: map-merge($_base-colors, $base-colors);

$_theme-colors: (
    "primary": "blue",
    "secondary": "gray",
    "success": "green",
    "info": "cyan",
    "warning": "yellow",
    "danger": "red",
);

$theme-colors: () !default;
$theme-colors: map-merge($_theme-colors, $theme-colors);

$_special-colors: (
    "light": get-color("gray", 300),
    "muted": get-color("gray", 500),
    "dark": get-color("gray", 700),
    "body": get-color("gray", 900),
    "link": get-color("primary"),
    "hover": get-color("primary"),
);

$special-colors: () !default;
$special-colors: map-merge($_special-colors, $special-colors);

// stylelint-enable value-keyword-case

// Typography
// ---------------------------------------------------------------------------

// stylelint-disable value-keyword-case

$font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace !default;
$font-family-sans-serif: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji !default;

// stylelint-enable value-keyword-case

// Body
// ---------------------------------------------------------------------------

$body-font-family: $font-family-sans-serif !default;
$body-font-size: null !default;
$body-font-style: null !default;
$body-font-weight: null !default;
$body-line-height: 1 !default;
$body-color: get-color("body") !default;
$body-background: get-color("white") !default;

// Links
// ---------------------------------------------------------------------------

$link-color: get-color("link") !default;
$link-decoration: none !default;
$link-hover-color: null !default;
$link-hover-decoration: null !default;

// Text-level semantics
// ---------------------------------------------------------------------------

$mark-color: get-color("black") !default;
$mark-background: get-color("yellow") !default;

// Breakpoints
// ---------------------------------------------------------------------------

$breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
) !default;

@include _assert-ascending($breakpoints, "$breakpoints");
@include _assert-starts-at-zero($breakpoints, "$breakpoints");

// Grid
// ---------------------------------------------------------------------------

$columns: 12 !default;
$gutter: 32px !default;

// Utilities - Numerical values
// ---------------------------------------------------------------------------

$order-min: -1 !default;
$order-max: $columns + 1 !default;
$order-map: get-utility-numerical-values($order-min, $order-max) !default;

$padding-min: 0 !default;
$padding-max: 48 !default;
$padding-map: get-utility-numerical-values($padding-min, $padding-max, px) !default;

$margin-min: -48 !default;
$margin-max: 48 !default;
$margin-map: get-utility-numerical-values($margin-min, $margin-max, px, get-map-item(a, auto)) !default;

$font-size-min: 10 !default;
$font-size-max: 48 !default;
$font-size-map: get-utility-numerical-values($font-size-min, $font-size-max, px) !default;

$line-height-min: $font-size-min !default;
$line-height-max: ceil($font-size-max * 2) !default;
$line-height-map: get-utility-numerical-values($line-height-min, $line-height-max, px) !default;

$border-width-min: 0 !default;
$border-width-max: 8 !default;
$border-width-map: get-utility-numerical-values($border-width-min, $border-width-max, px) !default;

$border-radius-min: 0 !default;
$border-radius-max: 8 !default;
$border-radius-map: get-utility-numerical-values($border-radius-min, $border-radius-max, px, get-map-item(null, 50%)) !default;

// Utilities - Color values
// ---------------------------------------------------------------------------

$color-variants: (50, 100, 200, 300, 400, 500, 600, 700, 800, 900) !default;
$color-opacities: (10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%) !default;

$color-map: get-utility-color-values(get-map-item(inherit)) !default;
$background-color-map: get-utility-color-values(get-map-item(transparent)) !default;
$border-color-map: get-utility-color-values(get-map-item(transparent)) !default;

// Utilities - Repeated values
// ---------------------------------------------------------------------------

$size-map: (
    auto: auto,
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
) !default;

$width-size-map: (
    100: 100%,
    100v: 100vw,
) !default;

$height-size-map: (
    100: 100%,
    100v: 100vh,
) !default;

$overflow-map: (
    a: auto,
    h: hidden,
    s: scroll,
    v: visible,
) !default;

$border-map: (
    null: 1px solid currentColor,
) !default;

$border-style-map: (
    da: dashed,
    db: double,
    do: dotted,
    i: inset,
    n: none,
    o: outset,
    s: solid,
) !default;

// Utilities
// ---------------------------------------------------------------------------

$_utilities: (
    position: (
        class: pos,
        values: (
            a: absolute,
            f: fixed,
            r: relative,
            s: static,
            y: sticky,
        ),
    ),
    display: (
        responsive: true,
        print: true,
        class: d,
        values: (
            b: block,
            f: flex,
            i: inline,
            ib: inline-block,
            if: inline-flex,
            n: none,
            tb: table,
            tbc: table-cell,
            tbr: table-row,
        ),
    ),
    flex: (
        responsive: true,
        class: fx,
        values: (
            null: 1 1 auto,
        ),
    ),
    flex-direction: (
        responsive: true,
        class: fxd,
        values: (
            c: column,
            cr: column-reverse,
            r: row,
            rr: row-reverse,
        ),
    ),
    flex-wrap: (
        responsive: true,
        class: fxw,
        values: (
            n: nowrap,
            w: wrap,
            wr: wrap-reverse,
        ),
    ),
    flex-shrink: (
        responsive: true,
        class: fxsh,
        values: 0 1,
    ),
    flex-grow: (
        responsive: true,
        class: fxg,
        values: 0 1,
    ),
    align-content: (
        responsive: true,
        class: ac,
        values: (
            c: center,
            fe: flex-end,
            fs: flex-start,
            s: stretch,
            sa: space-around,
            sb: space-between,
        ),
    ),
    align-items: (
        responsive: true,
        class: ai,
        values: (
            b: baseline,
            c: center,
            fe: flex-end,
            fs: flex-start,
            s: stretch,
        ),
    ),
    align-self: (
        responsive: true,
        class: as,
        values: (
            a: auto,
            b: baseline,
            c: center,
            fe: flex-end,
            fs: flex-start,
            s: stretch,
        ),
    ),
    justify-content: (
        responsive: true,
        class: jc,
        values: (
            c: center,
            fe: flex-end,
            fs: flex-start,
            sa: space-around,
            sb: space-between,
        ),
    ),
    order: (
        responsive: true,
        class: ord,
        values: $order-map,
    ),
    float: (
        responsive: true,
        class: fl,
        values: (
            l: left,
            n: none,
            r: right,
        ),
    ),
    width: (
        class: w,
        values: map-merge($size-map, $width-size-map),
    ),
    min-width: (
        class: miw,
        values: $width-size-map,
    ),
    max-width: (
        class: maw,
        values: $width-size-map,
    ),
    height: (
        class: h,
        values: map-merge($size-map, $height-size-map),
    ),
    min-height: (
        class: mih,
        values: $height-size-map,
    ),
    max-height: (
        class: mah,
        values: $height-size-map,
    ),
    padding: (
        responsive: true,
        class: p,
        values: $padding-map,
    ),
    padding-x: (
        responsive: true,
        class: px,
        property: padding-right padding-left,
        values: $padding-map,
    ),
    padding-y: (
        responsive: true,
        class: py,
        property: padding-top padding-bottom,
        values: $padding-map,
    ),
    padding-top: (
        responsive: true,
        class: pt,
        values: $padding-map,
    ),
    padding-right: (
        responsive: true,
        class: pr,
        values: $padding-map,
    ),
    padding-bottom: (
        responsive: true,
        class: pb,
        values: $padding-map,
    ),
    padding-left: (
        responsive: true,
        class: pl,
        values: $padding-map,
    ),
    margin: (
        responsive: true,
        class: m,
        values: $margin-map,
    ),
    margin-x: (
        responsive: true,
        class: mx,
        property: margin-right margin-left,
        values: $margin-map,
    ),
    margin-y: (
        responsive: true,
        class: my,
        property: margin-top margin-bottom,
        values: $margin-map,
    ),
    margin-top: (
        responsive: true,
        class: mt,
        values: $margin-map,
    ),
    margin-right: (
        responsive: true,
        class: mr,
        values: $margin-map,
    ),
    margin-bottom: (
        responsive: true,
        class: mb,
        values: $margin-map,
    ),
    margin-left: (
        responsive: true,
        class: ml,
        values: $margin-map,
    ),
    overflow: (
        class: ov,
        values: $overflow-map,
    ),
    overflow-x: (
        class: ovx,
        values: $overflow-map,
    ),
    overflow-y: (
        class: ovy,
        values: $overflow-map,
    ),
    font-family: (
        class: ff,
        values: (
            m: $font-family-monospace,
            ss: $font-family-sans-serif,
        ),
    ),
    font-size: (
        responsive: true,
        class: fz,
        values: $font-size-map,
    ),
    font-style: (
        class: fs,
        values: (
            i: italic,
            nm: normal,
        ),
    ),
    font-weight: (
        class: fw,
        values: (
            b: bold,
            br: bolder,
            lr: lighter,
            nm: normal,
        ),
    ),
    line-height: (
        responsive: true,
        class: lh,
        values: $line-height-map,
    ),
    color: (
        class: c,
        values: $color-map,
    ),
    text-align: (
        responsive: true,
        class: ta,
        values: (
            c: center,
            j: justify,
            l: left,
            r: right,
        ),
    ),
    text-decoration: (
        class: td,
        values: (
            l: line-through,
            n: none,
            o: overline,
            u: underline,
        ),
    ),
    text-transform: (
        class: tt,
        values: (
            c: capitalize,
            l: lowercase,
            n: none,
            u: uppercase,
        ),
    ),
    word-wrap: (
        class: wow,
        values: (
            b: break-word,
            n: none,
            nm: normal,
        ),
    ),
    white-space: (
        class: whs,
        values: (
            nm: normal,
            nw: nowrap,
            p: pre,
            pl: pre-line,
            pw: pre-wrap,
        ),
    ),
    vertical-align: (
        class: va,
        values: (
            b: bottom,
            bl: baseline,
            m: middle,
            sub: sub,
            sup: super,
            t: top,
            tb: text-bottom,
            tt: text-top,
        ),
    ),
    pointer-events: (
        class: pe,
        values: (
            a: auto,
            n: none,
        ),
    ),
    visibility: (
        class: v,
        values: (
            c: collapse,
            h: hidden,
            v: visible,
        ),
    ),
    user-select: (
        class: us,
        values: (
            a: auto,
            all: all,
            c: contain,
            n: none,
            t: text,
        ),
    ),
    background-color: (
        class: bgc,
        values: $background-color-map,
    ),
    border: (
        class: bd,
        values: $border-map,
    ),
    border-x: (
        class: bdx,
        property: border-right border-left,
        values: $border-map,
    ),
    border-y: (
        class: bdy,
        property: border-top border-bottom,
        values: $border-map,
    ),
    border-top: (
        class: bdt,
        values: $border-map,
    ),
    border-right: (
        class: bdr,
        values: $border-map,
    ),
    border-bottom: (
        class: bdb,
        values: $border-map,
    ),
    border-left: (
        class: bdl,
        values: $border-map,
    ),
    border-color: (
        class: bdc,
        values: $border-color-map,
    ),
    border-color-x: (
        class: bdcx,
        property: border-right-color border-left-color,
        values: $border-color-map,
    ),
    border-color-y: (
        class: bdcy,
        property: border-top-color border-bottom-color,
        values: $border-color-map,
    ),
    border-color-top: (
        class: bdct,
        property: border-top-color,
        values: $border-color-map,
    ),
    border-color-right: (
        class: bdcr,
        property: border-right-color,
        values: $border-color-map,
    ),
    border-color-bottom: (
        class: bdcb,
        property: border-bottom-color,
        values: $border-color-map,
    ),
    border-color-left: (
        class: bdcl,
        property: border-left-color,
        values: $border-color-map,
    ),
    border-style: (
        class: bds,
        values: $border-style-map,
    ),
    border-style-x: (
        class: bdsx,
        property: border-right-style border-left-style,
        values: $border-style-map,
    ),
    border-style-y: (
        class: bdsy,
        property: border-top-style border-bottom-style,
        values: $border-style-map,
    ),
    border-style-top: (
        class: bdst,
        property: border-top-style,
        values: $border-style-map,
    ),
    border-style-right: (
        class: bdsr,
        property: border-right-style,
        values: $border-style-map,
    ),
    border-style-bottom: (
        class: bdsb,
        property: border-bottom-style,
        values: $border-style-map,
    ),
    border-style-left: (
        class: bdsl,
        property: border-left-style,
        values: $border-style-map,
    ),
    border-width: (
        class: bdw,
        values: $border-width-map,
    ),
    border-width-x: (
        class: bdwx,
        property: border-right-width border-left-width,
        values: $border-width-map,
    ),
    border-width-y: (
        class: bdwy,
        property: border-top-width border-bottom-width,
        values: $border-width-map,
    ),
    border-width-top: (
        class: bdwt,
        property: border-top-width,
        values: $border-width-map,
    ),
    border-width-right: (
        class: bdwr,
        property: border-right-width,
        values: $border-width-map,
    ),
    border-width-bottom: (
        class: bdwb,
        property: border-bottom-width,
        values: $border-width-map,
    ),
    border-width-left: (
        class: bdwl,
        property: border-left-width,
        values: $border-width-map,
    ),
    border-radius: (
        class: bdrs,
        values: $border-radius-map,
    ),
    border-radius-top-right: (
        class: bdrstr,
        property: border-top-right-radius,
        values: $border-radius-map,
    ),
    border-radius-top-left: (
        class: bdrstl,
        property: border-top-left-radius,
        values: $border-radius-map,
    ),
    border-radius-bottom-right: (
        class: bdrsbr,
        property: border-bottom-right-radius,
        values: $border-radius-map,
    ),
    border-radius-bottom-left: (
        class: bdrsbl,
        property: border-bottom-left-radius,
        values: $border-radius-map,
    ),
);

$utilities: () !default;
$utilities: map-merge($_utilities, $utilities);
